#!/usr/bin/env Rscript
# vi: ft=r fdm=marker

# CONSTANTS {{{1
################################################################

ARGS <- commandArgs(trailingOnly = FALSE)
SCRIPT.PATH <- sub("--file=", "", ARGS[grep("--file=", ARGS)])
SCRIPT.DIR <- dirname(SCRIPT.PATH)

INTEGER.TABLE.FILE <- file.path(SCRIPT.DIR, 'res', 'integer_table.csv')

# SOURCE R FILES {{{1
################################################################

source(file.path(SCRIPT.DIR, '..', 'dfhlp.R'))

# Test df.force.numeric {{{1
################################################################

test_df.force.numeric <- function() {

	# Test NULL
	testthat::expect_null(df.force.numeric(NULL))

	# Test empty data frame
	df <- df.force.numeric(data.frame())
	testthat::expect_is(df, 'data.frame')
	testthat::expect_equal(nrow(df), 0)
	testthat::expect_equal(ncol(df), 0)

	# Test converting an integer data frame
	df.i <- data.frame(a = as.integer(c(1,3)), b = as.integer(c(4,50)))
	testthat::expect_true(all(vapply(df.i, is.integer, FUN.VALUE = TRUE)))
	df.n <- df.force.numeric(df.i)
	testthat::expect_is(df.n, 'data.frame')
	testthat::expect_equal(nrow(df.n), nrow(df.i))
	testthat::expect_equal(ncol(df.n), ncol(df.i))
	testthat::expect_true(all(vapply(df.n, is.numeric, FUN.VALUE = TRUE)))

	# Test converting only a set of columns
	df.n <- df.force.numeric(df.i, cols = 'a')
	testthat::expect_is(df.n, 'data.frame')
	testthat::expect_equal(nrow(df.n), nrow(df.i))
	testthat::expect_equal(ncol(df.n), ncol(df.i))
	testthat::expect_is(df.n[['a']], 'numeric')
	testthat::expect_is(df.n[['b']], 'integer')

	# Test with data frame containing other columns than integers
	df.c <- data.frame(a = c('as', 'is'), b = as.integer(c(4,5)))
	df.n <- df.force.numeric(df.c)
	testthat::expect_equal(nrow(df.n), nrow(df.c))
	testthat::expect_equal(ncol(df.n), ncol(df.c))
	testthat::expect_is(df.n[['a']], 'factor')
	testthat::expect_is(df.n[['b']], 'numeric')
}

# Test df.read.table {{{1
################################################################

test_df.read.table <- function() {

	# Read integer table
	df <- df.read.table(INTEGER.TABLE.FILE, sep = "\t", header = TRUE)
	testthat::expect_true(all(vapply(df, is.integer, FUN.VALUE = TRUE)))

	# Read integer table and convert all integer columns to numeric
	df <- df.read.table(INTEGER.TABLE.FILE, sep = "\t", header = TRUE, force.numeric = TRUE)
	testthat::expect_true(all(vapply(df, is.numeric, FUN.VALUE = TRUE)))

	# Read integer table and convert some integer columns to numeric
	df <- df.read.table(INTEGER.TABLE.FILE, sep = "\t", header = TRUE, force.numeric = c('b'))
	testthat::expect_is(df[['a']], 'integer')
	testthat::expect_is(df[['b']], 'numeric')
}

# MAIN {{{1
################################################################

testthat::context('Test Data Frame Helper methods.')
testthat::test_that('Function df.force.numeric() works correctly.', test_df.force.numeric())
testthat::test_that('Function df.read.table() works correctly.', test_df.read.table())
